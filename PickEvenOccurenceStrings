/*
Given an array of strings, find the strings inside the array which are appearing even numbers. 
If a string appears odd numbers, don't include it in the output.
Strings should remain same order as input array. Don't change input array.
*/ 
 
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


namespace FindEvenOccurenceStrings
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Please input strings.");
            String line = Console.ReadLine();
            String[] input;
            String[] separators = { ",", ".", "!", "?", ";", ":", " " };
            input = line.Split(separators, StringSplitOptions.None);
            String[] output = GetStrings(input);
            foreach (string s in output)
            {
                if (s != "")
                {
                    System.Console.WriteLine(s);
                }
            }
        }

        public static String[] GetStrings(String[] input)
        {
            Dictionary<String, int> map = new Dictionary<string, int>();
            String[] output = new String[]{};
            if (input.Length == 0)
            {
                output = null;
            }
            while (input.Length > 0)
            {
                output = new String[input.Length];
                foreach (String s in input)
                {
                    if (!map.ContainsKey(s))
                    {
                        map.Add(s, 1);
                    }
                    else
                    {
                        map[s]+=1;
                    }
                }
                int i = 0;
                while (i < input.Length)
                {
                    foreach (String s in map.Keys)
                    {
                        if (map[s] % 2 == 0)
                        {
                            output[i] = s;
                            i++;
                        }
                    }
                    break;

                }
                break;
            }

            return output;

        }
    }
}
